snippet type "type <name> struct {...}"
type ${1:name} struct {
	$0
}
endsnippet

snippet makes "<name> := make([]<slicetype>, 0)"
${2:varname} := make([]${1:type}, 0)
$0
endsnippet

snippet makem "<name> := make(map[<key>]<value>, 0)"
${3:varname} := make(map[${1:key}]${2:value}, 0)
$0
endsnippet

snippet fn "func (s *S) name() {}"
func (${1:this} *${2:Struct}) ${3:Name}($4) $5 {
	$0
}
endsnippet

snippet fnr "func (s *S) name() {}"
func (${1:this} *${2:Struct}) ${3:Name}($4) $5 {
	$0
	return $6
}
endsnippet

snippet date "2006-01-02T15:04:05Z07:00 (RFC3339)"
"2006-01-02T15:04:05Z07:00"
endsnippet

snippet gracefulshutdown "Graceful shutdown with deadline"
// graceful shutdown with deadline
c := make(chan os.Signal, 1)
signal.Notify(c, os.Interrupt)
<-c

ctx, cancel := context.WithTimeout(context.Background(), 15*time.Second)
defer cancel()
srv.Shutdown(ctx)
endsnippet

snippet httphandler "stdlib HTTP handler"
func $1(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "$0")
}
endsnippet

snippet jsonencode "json encode map[string]interface{}"
	json.NewEncoder($1).Encode(map[string]interface{}{
		$0,
	})
endsnippet
